"""edit username, ad completed at, remove total quesions from user attempts

Revision ID: 7242c70bf6d3
Revises: 7086cc8d864d
Create Date: 2025-02-16 01:08:27.400798

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel.sql.sqltypes

# revision identifiers, used by Alembic.
revision: str = "7242c70bf6d3"
down_revision: Union[str, None] = "7086cc8d864d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "userattempt",
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "userattempt",
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=False),
    )
    op.add_column(
        "userattempt",
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.drop_column("userattempt", "created_at")
    op.drop_column("userattempt", "total_questions")
    op.drop_column("userattempt", "user_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "userattempt",
        sa.Column("user_name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "userattempt",
        sa.Column("total_questions", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "userattempt",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("userattempt", "completed_at")
    op.drop_column("userattempt", "started_at")
    op.drop_column("userattempt", "username")
    # ### end Alembic commands ###
